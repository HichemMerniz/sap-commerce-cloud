{"version":3,"sources":["node_modules/@spartacus/user/fesm2022/spartacus-user-profile-core.mjs","node_modules/@spartacus/user/fesm2022/spartacus-user-profile-occ.mjs","node_modules/@spartacus/user/fesm2022/spartacus-user-profile.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, NgModule } from '@angular/core';\nimport * as i2 from '@spartacus/core';\nimport { CommandStrategy, LanguageSetEvent, UserActions } from '@spartacus/core';\nimport { switchMap, take, tap, map } from 'rxjs/operators';\nimport * as i1 from '@spartacus/user/account/root';\nimport { UserAccountChangedEvent } from '@spartacus/user/account/root';\nimport * as i4 from '@ngrx/store';\nimport { UserEmailFacade, UserPasswordFacade, UserProfileFacade, UserRegisterFacade } from '@spartacus/user/profile/root';\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nconst USER_PROFILE_NORMALIZER = new InjectionToken('UserProfileNormalizer');\nconst USER_PROFILE_SERIALIZER = new InjectionToken('UserProfileSerializer');\nconst USER_SERIALIZER = new InjectionToken('UserSerializer');\nconst USER_SIGN_UP_SERIALIZER = new InjectionToken('UserSignUpSerializer');\nconst TITLE_NORMALIZER = new InjectionToken('TitleNormalizer');\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserProfileAdapter {}\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserProfileConnector {\n  constructor(userProfileAdapter) {\n    this.userProfileAdapter = userProfileAdapter;\n  }\n  update(username, user) {\n    return this.userProfileAdapter.update(username, user);\n  }\n  register(user) {\n    return this.userProfileAdapter.register(user);\n  }\n  registerGuest(guid, password) {\n    return this.userProfileAdapter.registerGuest(guid, password);\n  }\n  requestForgotPasswordEmail(userEmailAddress) {\n    return this.userProfileAdapter.requestForgotPasswordEmail(userEmailAddress);\n  }\n  resetPassword(token, newPassword) {\n    return this.userProfileAdapter.resetPassword(token, newPassword);\n  }\n  updateEmail(userId, currentPassword, newUserId) {\n    return this.userProfileAdapter.updateEmail(userId, currentPassword, newUserId);\n  }\n  updatePassword(userId, oldPassword, newPassword) {\n    return this.userProfileAdapter.updatePassword(userId, oldPassword, newPassword);\n  }\n  remove(userId) {\n    return this.userProfileAdapter.close(userId);\n  }\n  getTitles() {\n    return this.userProfileAdapter.loadTitles();\n  }\n  static {\n    this.ɵfac = function UserProfileConnector_Factory(t) {\n      return new (t || UserProfileConnector)(i0.ɵɵinject(UserProfileAdapter));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UserProfileConnector,\n      factory: UserProfileConnector.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserProfileConnector, [{\n    type: Injectable\n  }], () => [{\n    type: UserProfileAdapter\n  }], null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserEmailService {\n  constructor(userIdService, userProfileConnector, command) {\n    this.userIdService = userIdService;\n    this.userProfileConnector = userProfileConnector;\n    this.command = command;\n    this.updateCommand = this.command.create(payload => this.userIdService.takeUserId(true).pipe(switchMap(uid => this.userProfileConnector.updateEmail(uid, payload.password, payload.newUid))), {\n      strategy: CommandStrategy.Queue\n    });\n  }\n  /**\n   * Updates the user's email.\n   *\n   * @param password to users password to confirm the users\n   * @param newUid the new proposed email address.\n   */\n  update(password, newUid) {\n    return this.updateCommand.execute({\n      password,\n      newUid\n    });\n  }\n  static {\n    this.ɵfac = function UserEmailService_Factory(t) {\n      return new (t || UserEmailService)(i0.ɵɵinject(i2.UserIdService), i0.ɵɵinject(UserProfileConnector), i0.ɵɵinject(i2.CommandService));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UserEmailService,\n      factory: UserEmailService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserEmailService, [{\n    type: Injectable\n  }], () => [{\n    type: i2.UserIdService\n  }, {\n    type: UserProfileConnector\n  }, {\n    type: i2.CommandService\n  }], null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserPasswordService {\n  constructor(userProfileConnector, userIdService, command) {\n    this.userProfileConnector = userProfileConnector;\n    this.userIdService = userIdService;\n    this.command = command;\n    this.updateCommand = this.command.create(payload => this.userIdService.takeUserId(true).pipe(take(1), switchMap(uid => this.userProfileConnector.updatePassword(uid, payload.oldPassword, payload.newPassword))));\n    this.resetCommand = this.command.create(payload => this.userProfileConnector.resetPassword(payload.token, payload.password));\n    this.requestForgotPasswordEmailCommand = this.command.create(payload => this.userProfileConnector.requestForgotPasswordEmail(payload.email));\n  }\n  /**\n   * Updates the password for the user\n   *\n   * The method returns an observable with `LoaderState` information, including the\n   * actual user data.\n   *\n   * @param oldPassword the current password that will be changed\n   * @param newPassword the new password\n   */\n  update(oldPassword, newPassword) {\n    return this.updateCommand.execute({\n      oldPassword,\n      newPassword\n    });\n  }\n  /**\n   * Reset new password. Part of the forgot password flow.\n   *\n   * @param token\n   * @param password\n   */\n  reset(token, password) {\n    return this.resetCommand.execute({\n      token,\n      password\n    });\n  }\n  /*\n   * Request an email to reset a forgotten password.\n   */\n  requestForgotPasswordEmail(email) {\n    return this.requestForgotPasswordEmailCommand.execute({\n      email\n    });\n  }\n  static {\n    this.ɵfac = function UserPasswordService_Factory(t) {\n      return new (t || UserPasswordService)(i0.ɵɵinject(UserProfileConnector), i0.ɵɵinject(i2.UserIdService), i0.ɵɵinject(i2.CommandService));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UserPasswordService,\n      factory: UserPasswordService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserPasswordService, [{\n    type: Injectable\n  }], () => [{\n    type: UserProfileConnector\n  }, {\n    type: i2.UserIdService\n  }, {\n    type: i2.CommandService\n  }], null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserProfileService {\n  constructor(userAccountService, authService, userProfileConnector, eventService, userIdService, query, command) {\n    this.userAccountService = userAccountService;\n    this.authService = authService;\n    this.userProfileConnector = userProfileConnector;\n    this.eventService = eventService;\n    this.userIdService = userIdService;\n    this.query = query;\n    this.command = command;\n    this.updateCommand = this.command.create(payload => this.userIdService.takeUserId(true).pipe(switchMap(uid => this.userProfileConnector.update(uid, payload.details).pipe(tap(() => {\n      this.eventService.dispatch({\n        user: payload.details\n      }, UserAccountChangedEvent);\n    })))), {\n      strategy: CommandStrategy.Queue\n    });\n    this.closeCommand = this.command.create(() => this.userIdService.takeUserId(true).pipe(switchMap(uid => this.userProfileConnector.remove(uid).pipe(tap(() => this.authService.logout())))));\n    this.titleQuery = this.query.create(() => this.userProfileConnector.getTitles(), {\n      reloadOn: [LanguageSetEvent]\n    });\n  }\n  get() {\n    return this.userAccountService.get();\n  }\n  /**\n   * Updates the user's details.\n   *\n   * @param details User details to be updated.\n   */\n  update(details) {\n    return this.updateCommand.execute({\n      details\n    });\n  }\n  /**\n   * Closes the user account.\n   */\n  close() {\n    return this.closeCommand.execute(undefined);\n  }\n  /**\n   * Returns titles that can be used for the user profiles.\n   */\n  getTitles() {\n    return this.titleQuery.get().pipe(map(titles => titles ?? []));\n  }\n  static {\n    this.ɵfac = function UserProfileService_Factory(t) {\n      return new (t || UserProfileService)(i0.ɵɵinject(i1.UserAccountFacade), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(UserProfileConnector), i0.ɵɵinject(i2.EventService), i0.ɵɵinject(i2.UserIdService), i0.ɵɵinject(i2.QueryService), i0.ɵɵinject(i2.CommandService));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UserProfileService,\n      factory: UserProfileService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserProfileService, [{\n    type: Injectable\n  }], () => [{\n    type: i1.UserAccountFacade\n  }, {\n    type: i2.AuthService\n  }, {\n    type: UserProfileConnector\n  }, {\n    type: i2.EventService\n  }, {\n    type: i2.UserIdService\n  }, {\n    type: i2.QueryService\n  }, {\n    type: i2.CommandService\n  }], null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserRegisterService {\n  constructor(userProfile, userConnector, authService, command, store) {\n    this.userProfile = userProfile;\n    this.userConnector = userConnector;\n    this.authService = authService;\n    this.command = command;\n    this.store = store;\n    this.registerCommand = this.command.create(({\n      user\n    }) => this.userConnector.register(user).pipe(tap(() => {\n      // this is a compatibility mechanism only, to make anonymous consents\n      // management work properly in transitional period (when we move logic\n      // to separate libraries)\n      this.store.dispatch(new UserActions.RegisterUserSuccess());\n    })));\n    this.registerGuestCommand = this.command.create(payload => this.userConnector.registerGuest(payload.guid, payload.password).pipe(tap(user => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.authService.loginWithCredentials(user.uid, payload.password);\n    })));\n  }\n  /**\n   * Register a new user.\n   *\n   * @param submitFormData as UserRegisterFormData\n   */\n  register(user) {\n    return this.registerCommand.execute({\n      user\n    });\n  }\n  /**\n   * Register a new user from guest.\n   *\n   * @param guid\n   * @param password\n   */\n  registerGuest(guid, password) {\n    return this.registerGuestCommand.execute({\n      guid,\n      password\n    });\n  }\n  /**\n   * Returns titles that can be used for the user profiles.\n   */\n  getTitles() {\n    return this.userProfile.getTitles();\n  }\n  static {\n    this.ɵfac = function UserRegisterService_Factory(t) {\n      return new (t || UserRegisterService)(i0.ɵɵinject(UserProfileService), i0.ɵɵinject(UserProfileConnector), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i2.CommandService), i0.ɵɵinject(i4.Store));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UserRegisterService,\n      factory: UserRegisterService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserRegisterService, [{\n    type: Injectable\n  }], () => [{\n    type: UserProfileService\n  }, {\n    type: UserProfileConnector\n  }, {\n    type: i2.AuthService\n  }, {\n    type: i2.CommandService\n  }, {\n    type: i4.Store\n  }], null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nconst facadeProviders = [UserEmailService, UserPasswordService, UserProfileService, UserRegisterService, {\n  provide: UserEmailFacade,\n  useExisting: UserEmailService\n}, {\n  provide: UserPasswordFacade,\n  useExisting: UserPasswordService\n}, {\n  provide: UserProfileFacade,\n  useExisting: UserProfileService\n}, {\n  provide: UserRegisterFacade,\n  useExisting: UserRegisterService\n}];\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserProfileCoreModule {\n  static {\n    this.ɵfac = function UserProfileCoreModule_Factory(t) {\n      return new (t || UserProfileCoreModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: UserProfileCoreModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [UserProfileConnector, ...facadeProviders]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserProfileCoreModule, [{\n    type: NgModule,\n    args: [{\n      providers: [UserProfileConnector, ...facadeProviders]\n    }]\n  }], null, null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TITLE_NORMALIZER, USER_PROFILE_NORMALIZER, USER_PROFILE_SERIALIZER, USER_SERIALIZER, USER_SIGN_UP_SERIALIZER, UserEmailService, UserPasswordService, UserProfileAdapter, UserProfileConnector, UserProfileCoreModule, UserProfileService, UserRegisterService };\n","import * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, NgModule } from '@angular/core';\nimport * as i2 from '@spartacus/core';\nimport { LoggerService, normalizeHttpError, USE_CLIENT_TOKEN, InterceptorUtil, provideDefaultConfig } from '@spartacus/core';\nimport { USER_PROFILE_SERIALIZER, USER_SIGN_UP_SERIALIZER, USER_PROFILE_NORMALIZER, TITLE_NORMALIZER, UserProfileAdapter } from '@spartacus/user/profile/core';\nimport { catchError, map } from 'rxjs/operators';\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nconst defaultOccUserProfileConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        userRegister: 'users',\n        userForgotPassword: 'forgottenpasswordtokens',\n        userResetPassword: 'resetpassword',\n        userUpdateLoginId: 'users/${userId}/login',\n        userUpdatePassword: 'users/${userId}/password',\n        titles: 'titles'\n      }\n    }\n  }\n};\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nconst CONTENT_TYPE_JSON_HEADER = {\n  'Content-Type': 'application/json'\n};\nconst CONTENT_TYPE_URLENCODED_HEADER = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\nclass OccUserProfileAdapter {\n  constructor(http, occEndpoints, converter) {\n    this.http = http;\n    this.occEndpoints = occEndpoints;\n    this.converter = converter;\n    this.logger = inject(LoggerService);\n  }\n  update(userId, user) {\n    const endpoint = this.occEndpoints.isConfigured('userUpdateProfile') ? 'userUpdateProfile' : 'user';\n    const url = this.occEndpoints.buildUrl(endpoint, {\n      urlParams: {\n        userId\n      }\n    });\n    user = this.converter.convert(user, USER_PROFILE_SERIALIZER);\n    return this.http.patch(url, user).pipe(catchError(error => {\n      throw normalizeHttpError(error, this.logger);\n    }));\n  }\n  register(user) {\n    const url = this.occEndpoints.buildUrl('userRegister');\n    let headers = new HttpHeaders({\n      ...CONTENT_TYPE_JSON_HEADER\n    });\n    headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    user = this.converter.convert(user, USER_SIGN_UP_SERIALIZER);\n    return this.http.post(url, user, {\n      headers\n    }).pipe(catchError(error => {\n      throw normalizeHttpError(error, this.logger);\n    }), this.converter.pipeable(USER_PROFILE_NORMALIZER));\n  }\n  registerGuest(guid, password) {\n    const url = this.occEndpoints.buildUrl('userRegister');\n    let headers = new HttpHeaders({\n      ...CONTENT_TYPE_URLENCODED_HEADER\n    });\n    headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    const httpParams = new HttpParams().set('guid', guid).set('password', password);\n    return this.http.post(url, httpParams, {\n      headers\n    }).pipe(catchError(error => {\n      throw normalizeHttpError(error, this.logger);\n    }), this.converter.pipeable(USER_PROFILE_NORMALIZER));\n  }\n  requestForgotPasswordEmail(userEmailAddress) {\n    const url = this.occEndpoints.buildUrl('userForgotPassword');\n    const httpParams = new HttpParams().set('userId', userEmailAddress);\n    let headers = new HttpHeaders({\n      ...CONTENT_TYPE_URLENCODED_HEADER\n    });\n    headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    return this.http.post(url, httpParams, {\n      headers\n    }).pipe(catchError(error => {\n      throw normalizeHttpError(error, this.logger);\n    }));\n  }\n  resetPassword(token, newPassword) {\n    const url = this.occEndpoints.buildUrl('userResetPassword');\n    let headers = new HttpHeaders({\n      ...CONTENT_TYPE_JSON_HEADER\n    });\n    headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    return this.http.post(url, {\n      token,\n      newPassword\n    }, {\n      headers\n    }).pipe(catchError(error => {\n      throw normalizeHttpError(error, this.logger);\n    }));\n  }\n  updateEmail(userId, currentPassword, newUserId) {\n    const url = this.occEndpoints.buildUrl('userUpdateLoginId', {\n      urlParams: {\n        userId\n      }\n    });\n    const httpParams = new HttpParams().set('password', currentPassword).set('newLogin', newUserId);\n    const headers = new HttpHeaders({\n      ...CONTENT_TYPE_URLENCODED_HEADER\n    });\n    return this.http.put(url, httpParams, {\n      headers\n    }).pipe(catchError(error => {\n      throw normalizeHttpError(error, this.logger);\n    }));\n  }\n  updatePassword(userId, oldPassword, newPassword) {\n    const url = this.occEndpoints.buildUrl('userUpdatePassword', {\n      urlParams: {\n        userId\n      }\n    });\n    const httpParams = new HttpParams().set('old', oldPassword).set('new', newPassword);\n    const headers = new HttpHeaders({\n      ...CONTENT_TYPE_URLENCODED_HEADER\n    });\n    return this.http.put(url, httpParams, {\n      headers\n    }).pipe(catchError(error => {\n      throw normalizeHttpError(error, this.logger);\n    }));\n  }\n  close(userId) {\n    const endpoint = this.occEndpoints.isConfigured('userCloseAccount') ? 'userCloseAccount' : 'user';\n    const url = this.occEndpoints.buildUrl(endpoint, {\n      urlParams: {\n        userId\n      }\n    });\n    return this.http.delete(url).pipe(catchError(error => {\n      throw normalizeHttpError(error, this.logger);\n    }));\n  }\n  loadTitles() {\n    const url = this.occEndpoints.buildUrl('titles');\n    return this.http.get(url).pipe(catchError(error => {\n      throw normalizeHttpError(error, this.logger);\n    }), map(titleList => titleList.titles ?? []), this.converter.pipeableMany(TITLE_NORMALIZER));\n  }\n  static {\n    this.ɵfac = function OccUserProfileAdapter_Factory(t) {\n      return new (t || OccUserProfileAdapter)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OccEndpointsService), i0.ɵɵinject(i2.ConverterService));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: OccUserProfileAdapter,\n      factory: OccUserProfileAdapter.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OccUserProfileAdapter, [{\n    type: Injectable\n  }], () => [{\n    type: i1.HttpClient\n  }, {\n    type: i2.OccEndpointsService\n  }, {\n    type: i2.ConverterService\n  }], null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserProfileOccModule {\n  static {\n    this.ɵfac = function UserProfileOccModule_Factory(t) {\n      return new (t || UserProfileOccModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: UserProfileOccModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [provideDefaultConfig(defaultOccUserProfileConfig), {\n        provide: UserProfileAdapter,\n        useClass: OccUserProfileAdapter\n      }]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserProfileOccModule, [{\n    type: NgModule,\n    args: [{\n      providers: [provideDefaultConfig(defaultOccUserProfileConfig), {\n        provide: UserProfileAdapter,\n        useClass: OccUserProfileAdapter\n      }]\n    }]\n  }], null, null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OccUserProfileAdapter, UserProfileOccModule, defaultOccUserProfileConfig };\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { UserProfileComponentsModule } from '@spartacus/user/profile/components';\nimport { UserProfileCoreModule } from '@spartacus/user/profile/core';\nimport { UserProfileOccModule } from '@spartacus/user/profile/occ';\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserProfileModule {\n  static {\n    this.ɵfac = function UserProfileModule_Factory(t) {\n      return new (t || UserProfileModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: UserProfileModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [UserProfileCoreModule, UserProfileOccModule, UserProfileComponentsModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserProfileModule, [{\n    type: NgModule,\n    args: [{\n      imports: [UserProfileCoreModule, UserProfileOccModule, UserProfileComponentsModule]\n    }]\n  }], null, null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n/*\n * Public API Surface of user profile\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { UserProfileModule };\n"],"mappings":"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","names":[],"x_google_ignoreList":[0,1,2]}