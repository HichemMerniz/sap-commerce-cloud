{"version":3,"sources":["node_modules/@spartacus/checkout/fesm2022/spartacus-checkout-base-root.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i3 from '@spartacus/cart/base/root';\nimport { MergeCartSuccessEvent, DeleteCartEvent, LoadCartEvent, RemoveCartEvent, CART_BASE_FEATURE } from '@spartacus/cart/base/root';\nimport * as i1 from '@spartacus/core';\nimport { Config, CxEvent, LanguageSetEvent, CurrencySetEvent, LogoutEvent, LoginEvent, facadeFactory, UpdateUserAddressEvent, DeleteUserAddressEvent, UserAddressEvent, OCC_USER_ID_ANONYMOUS, LoadUserAddressesEvent, GlobalMessageType, LoadUserPaymentMethodsEvent, UserActions, provideDefaultConfig, provideDefaultConfigFactory } from '@spartacus/core';\nimport { SaveCartSuccessEvent, RestoreSavedCartSuccessEvent } from '@spartacus/cart/saved-cart/root';\nimport { OrderPlacedEvent } from '@spartacus/order/root';\nimport { Subscription, merge } from 'rxjs';\nimport { filter, map, switchMap, take, tap } from 'rxjs/operators';\nimport * as i2 from '@ngrx/store';\nimport { HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nvar DeliveryModePreferences;\n(function (DeliveryModePreferences) {\n  DeliveryModePreferences[\"FREE\"] = \"FREE\";\n  DeliveryModePreferences[\"LEAST_EXPENSIVE\"] = \"LEAST_EXPENSIVE\";\n  DeliveryModePreferences[\"MOST_EXPENSIVE\"] = \"MOST_EXPENSIVE\";\n})(DeliveryModePreferences || (DeliveryModePreferences = {}));\nclass CheckoutConfig {\n  static {\n    this.ɵfac = function CheckoutConfig_Factory(t) {\n      return new (t || CheckoutConfig)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CheckoutConfig,\n      factory: function CheckoutConfig_Factory(t) {\n        let r = null;\n        if (t) {\n          r = new (t || CheckoutConfig)();\n        } else {\n          r = i0.ɵɵinject(Config);\n        }\n        return r;\n      },\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: Config\n    }]\n  }], null, null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nconst defaultCheckoutConfig = {\n  checkout: {\n    steps: [{\n      id: 'deliveryAddress',\n      name: 'checkoutProgress.deliveryAddress',\n      routeName: 'checkoutDeliveryAddress',\n      type: [\"deliveryAddress\" /* CheckoutStepType.DELIVERY_ADDRESS */]\n    }, {\n      id: 'deliveryMode',\n      name: 'checkoutProgress.deliveryMode',\n      routeName: 'checkoutDeliveryMode',\n      type: [\"deliveryMode\" /* CheckoutStepType.DELIVERY_MODE */]\n    }, {\n      id: 'paymentDetails',\n      name: 'checkoutProgress.paymentDetails',\n      routeName: 'checkoutPaymentDetails',\n      type: [\"paymentDetails\" /* CheckoutStepType.PAYMENT_DETAILS */]\n    }, {\n      id: 'reviewOrder',\n      name: 'checkoutProgress.reviewOrder',\n      routeName: 'checkoutReviewOrder',\n      type: [\"reviewOrder\" /* CheckoutStepType.REVIEW_ORDER */]\n    }],\n    express: false,\n    defaultDeliveryMode: [DeliveryModePreferences.FREE],\n    guest: false\n  }\n};\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nconst defaultCheckoutRoutingConfig = {\n  routing: {\n    routes: {\n      checkoutLogin: {\n        paths: ['checkout-login'],\n        authFlow: true\n      },\n      checkout: {\n        paths: ['checkout']\n      },\n      checkoutDeliveryAddress: {\n        paths: ['checkout/delivery-address']\n      },\n      checkoutDeliveryMode: {\n        paths: ['checkout/delivery-mode']\n      },\n      checkoutPaymentDetails: {\n        paths: ['checkout/payment-details']\n      },\n      checkoutReviewOrder: {\n        paths: ['checkout/review-order']\n      }\n    }\n  }\n};\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Emit this event to force checkout details reload\n */\nclass CheckoutQueryReloadEvent extends CxEvent {\n  /**\n   * Event's type\n   */\n  static {\n    this.type = 'CheckoutQueryReloadEvent';\n  }\n}\n/**\n * Emit this event to force checkout details reset\n */\nclass CheckoutQueryResetEvent extends CxEvent {\n  /**\n   * Event's type\n   */\n  static {\n    this.type = 'CheckoutQueryResetEvent';\n  }\n}\n/**\n * An abstract event for all the checkout events.\n */\nclass CheckoutEvent extends CxEvent {}\n/**\n * An abstract event for all the delivery address related events.\n */\nclass CheckoutDeliveryAddressEvent extends CheckoutEvent {}\n/**\n * Fired when the delivery address is create cleared.\n */\nclass CheckoutDeliveryAddressCreatedEvent extends CheckoutDeliveryAddressEvent {\n  /**\n   * Event's type\n   */\n  static {\n    this.type = 'CheckoutDeliveryAddressCreatedEvent';\n  }\n}\n/**\n * Fired when the user sets a delivery address during checkout.\n */\nclass CheckoutDeliveryAddressSetEvent extends CheckoutDeliveryAddressEvent {\n  /**\n   * Event's type\n   */\n  static {\n    this.type = 'CheckoutDeliveryAddressSetEvent';\n  }\n}\n/**\n * Fired when the delivery address has to be cleared.\n */\nclass CheckoutDeliveryAddressClearedEvent extends CheckoutDeliveryAddressEvent {\n  /**\n   * Event's type\n   */\n  static {\n    this.type = 'CheckoutDeliveryAddressClearedEvent';\n  }\n}\n/**\n * An abstract event for all the delivery mode related events.\n */\nclass CheckoutDeliveryModeEvent extends CheckoutEvent {}\n/**\n * Fired when the delivery mode was set.\n */\nclass CheckoutDeliveryModeSetEvent extends CheckoutDeliveryModeEvent {\n  /**\n   * Event's type\n   */\n  static {\n    this.type = 'CheckoutDeliveryModeSetEvent';\n  }\n}\n/**\n * Fired when the delivery mode has been cleared.\n */\nclass CheckoutDeliveryModeClearedEvent extends CheckoutDeliveryModeEvent {\n  /**\n   * Event's type\n   */\n  static {\n    this.type = 'CheckoutDeliveryModeClearedEvent';\n  }\n}\n/**\n * Fired when the delivery mode has an error when trying to be cleared.\n */\nclass CheckoutDeliveryModeClearedErrorEvent extends CheckoutDeliveryModeEvent {\n  /**\n   * Event's type\n   */\n  static {\n    this.type = 'CheckoutDeliveryModeClearedErrorEvent';\n  }\n}\n/**\n * Emit this event to force delivery modes reload\n */\nclass CheckoutSupportedDeliveryModesQueryReloadEvent extends CheckoutDeliveryModeEvent {\n  /**\n   * Event's type\n   */\n  static {\n    this.type = 'CheckoutSupportedDeliveryModesQueryReloadEvent';\n  }\n}\n/**\n * Emit this event to force delivery modes reset\n */\nclass CheckoutSupportedDeliveryModesQueryResetEvent extends CheckoutDeliveryModeEvent {\n  /**\n   * Event's type\n   */\n  static {\n    this.type = 'CheckoutSupportedDeliveryModesQueryResetEvent';\n  }\n}\n/**\n * An abstract event for all the payment details related events.\n */\nclass CheckoutPaymentDetailsEvent extends CheckoutEvent {}\n/**\n * Fired when the payment details have been created.\n */\nclass CheckoutPaymentDetailsCreatedEvent extends CheckoutPaymentDetailsEvent {\n  /**\n   * Event's type\n   */\n  static {\n    this.type = 'CheckoutPaymentDetailsCreatedEvent';\n  }\n}\n/**\n * Fired when the payment details have been set.\n */\nclass CheckoutPaymentDetailsSetEvent extends CheckoutPaymentDetailsEvent {\n  /**\n   * Event's type\n   */\n  static {\n    this.type = 'CheckoutPaymentDetailsSetEvent';\n  }\n}\n/**\n * Emit this event to force payment card types reload\n */\nclass CheckoutPaymentCardTypesQueryReloadEvent extends CheckoutPaymentDetailsEvent {\n  /**\n   * Event's type\n   */\n  static {\n    this.type = 'CheckoutPaymentCardTypesQueryReloadEvent';\n  }\n}\n/**\n * Emit this event to force payment card types reset\n */\nclass CheckoutPaymentCardTypesQueryResetEvent extends CheckoutPaymentDetailsEvent {\n  /**\n   * Event's type\n   */\n  static {\n    this.type = 'CheckoutPaymentCardTypesQueryResetEvent';\n  }\n}\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass CheckoutQueryEventListener {\n  constructor(eventService) {\n    this.eventService = eventService;\n    this.subscriptions = new Subscription();\n    this.onCheckoutQueryReload();\n    this.onCheckoutQueryReset();\n  }\n  onCheckoutQueryReload() {\n    this.subscriptions.add(merge(this.eventService.get(LanguageSetEvent), this.eventService.get(CurrencySetEvent)).subscribe(() => {\n      this.eventService.dispatch({}, CheckoutQueryReloadEvent);\n    }));\n  }\n  onCheckoutQueryReset() {\n    this.subscriptions.add(merge(this.eventService.get(LogoutEvent), this.eventService.get(LoginEvent), this.eventService.get(SaveCartSuccessEvent), this.eventService.get(RestoreSavedCartSuccessEvent), this.eventService.get(MergeCartSuccessEvent), this.eventService.get(OrderPlacedEvent)).subscribe(() => {\n      this.eventService.dispatch({}, CheckoutQueryResetEvent);\n    }));\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  static {\n    this.ɵfac = function CheckoutQueryEventListener_Factory(t) {\n      return new (t || CheckoutQueryEventListener)(i0.ɵɵinject(i1.EventService));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CheckoutQueryEventListener,\n      factory: CheckoutQueryEventListener.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutQueryEventListener, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.EventService\n  }], null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nconst CHECKOUT_FEATURE = 'checkout';\nconst CHECKOUT_CORE_FEATURE = 'checkoutCore';\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass CheckoutDeliveryAddressFacade {\n  static {\n    this.ɵfac = function CheckoutDeliveryAddressFacade_Factory(t) {\n      return new (t || CheckoutDeliveryAddressFacade)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CheckoutDeliveryAddressFacade,\n      factory: () => (() => facadeFactory({\n        facade: CheckoutDeliveryAddressFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['getDeliveryAddressState', 'createAndSetAddress', 'setDeliveryAddress', 'clearCheckoutDeliveryAddress'],\n        // TODO:#deprecation-checkout - remove once we remove ngrx\n        async: true\n      }))(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutDeliveryAddressFacade, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => facadeFactory({\n        facade: CheckoutDeliveryAddressFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['getDeliveryAddressState', 'createAndSetAddress', 'setDeliveryAddress', 'clearCheckoutDeliveryAddress'],\n        // TODO:#deprecation-checkout - remove once we remove ngrx\n        async: true\n      })\n    }]\n  }], null, null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Checkout delivery address event listener.\n */\nclass CheckoutDeliveryAddressEventListener {\n  constructor(checkoutDeliveryAddressFacade, eventService, globalMessageService, activeCartFacade) {\n    this.checkoutDeliveryAddressFacade = checkoutDeliveryAddressFacade;\n    this.eventService = eventService;\n    this.globalMessageService = globalMessageService;\n    this.activeCartFacade = activeCartFacade;\n    this.subscriptions = new Subscription();\n    this.onDeliveryAddressCreated();\n    this.onDeliveryAddressSet();\n    this.onDeliveryAddressCleared();\n    this.onUserAddressChange();\n    this.onCartDeleted();\n  }\n  /**\n   * Registers listeners for the User address events.\n   */\n  onUserAddressChange() {\n    this.subscriptions.add(this.eventService.get(UserAddressEvent).pipe(filter(event => event instanceof UpdateUserAddressEvent || event instanceof DeleteUserAddressEvent), switchMap(({\n      userId\n    }) => this.activeCartFacade.takeActiveCartId().pipe(map(cartId => ({\n      cartId,\n      userId\n    }))))).subscribe(({\n      cartId,\n      userId\n    }) => {\n      // we want to LL the checkout (if not already loaded), in order to clear the checkout data that's potentially set on the back-end\n      this.checkoutDeliveryAddressFacade.clearCheckoutDeliveryAddress();\n      this.eventService.dispatch({\n        cartId,\n        userId\n      }, CheckoutSupportedDeliveryModesQueryResetEvent);\n    }));\n  }\n  onDeliveryAddressCreated() {\n    this.subscriptions.add(this.eventService.get(CheckoutDeliveryAddressCreatedEvent).subscribe(({\n      cartId,\n      userId\n    }) => {\n      if (userId !== OCC_USER_ID_ANONYMOUS) {\n        this.eventService.dispatch({\n          userId\n        }, LoadUserAddressesEvent);\n      }\n      this.globalMessageService.add({\n        key: 'addressForm.userAddressAddSuccess'\n      }, GlobalMessageType.MSG_TYPE_CONFIRMATION);\n      this.eventService.dispatch({\n        userId,\n        cartId\n      }, CheckoutSupportedDeliveryModesQueryResetEvent);\n      this.eventService.dispatch({}, CheckoutQueryResetEvent);\n    }));\n  }\n  onDeliveryAddressSet() {\n    this.subscriptions.add(this.eventService.get(CheckoutDeliveryAddressSetEvent).subscribe(({\n      userId,\n      cartId\n    }) => {\n      this.eventService.dispatch({\n        userId,\n        cartId\n      }, CheckoutSupportedDeliveryModesQueryResetEvent);\n      this.eventService.dispatch({}, CheckoutQueryResetEvent);\n    }));\n  }\n  onDeliveryAddressCleared() {\n    this.subscriptions.add(this.eventService.get(CheckoutDeliveryAddressClearedEvent).subscribe(() => this.eventService.dispatch({}, CheckoutQueryResetEvent)));\n  }\n  onCartDeleted() {\n    this.subscriptions.add(this.eventService.get(DeleteCartEvent).subscribe(() => this.eventService.dispatch({}, CheckoutQueryResetEvent)));\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  static {\n    this.ɵfac = function CheckoutDeliveryAddressEventListener_Factory(t) {\n      return new (t || CheckoutDeliveryAddressEventListener)(i0.ɵɵinject(CheckoutDeliveryAddressFacade), i0.ɵɵinject(i1.EventService), i0.ɵɵinject(i1.GlobalMessageService), i0.ɵɵinject(i3.ActiveCartFacade));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CheckoutDeliveryAddressEventListener,\n      factory: CheckoutDeliveryAddressEventListener.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutDeliveryAddressEventListener, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: CheckoutDeliveryAddressFacade\n  }, {\n    type: i1.EventService\n  }, {\n    type: i1.GlobalMessageService\n  }, {\n    type: i3.ActiveCartFacade\n  }], null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Checkout delivery mode event listener.\n */\nclass CheckoutDeliveryModeEventListener {\n  constructor(eventService) {\n    this.eventService = eventService;\n    this.subscriptions = new Subscription();\n    this.onDeliveryModeSet();\n    this.onDeliveryModeCleared();\n    this.onDeliveryModeClearedError();\n    this.onDeliveryModeReset();\n    this.onGetSupportedDeliveryModesQueryReload();\n    this.onGetSupportedDeliveryModesQueryReset();\n  }\n  onDeliveryModeSet() {\n    this.subscriptions.add(this.eventService.get(CheckoutDeliveryModeSetEvent).subscribe(({\n      userId,\n      cartId,\n      cartCode\n    }) => {\n      this.eventService.dispatch({}, CheckoutQueryResetEvent);\n      this.eventService.dispatch({\n        userId,\n        cartId,\n        cartCode\n      }, LoadCartEvent);\n    }));\n  }\n  onDeliveryModeCleared() {\n    this.subscriptions.add(this.eventService.get(CheckoutDeliveryModeClearedEvent).subscribe(({\n      userId,\n      cartId,\n      cartCode\n    }) => {\n      this.eventService.dispatch({}, CheckoutQueryResetEvent);\n      this.eventService.dispatch({\n        userId,\n        cartId,\n        cartCode\n      }, LoadCartEvent);\n    }));\n  }\n  onDeliveryModeClearedError() {\n    this.subscriptions.add(this.eventService.get(CheckoutDeliveryModeClearedErrorEvent).subscribe(({\n      userId,\n      cartId,\n      cartCode\n    }) => {\n      this.eventService.dispatch({}, CheckoutQueryResetEvent);\n      this.eventService.dispatch({\n        userId,\n        cartId,\n        cartCode\n      }, LoadCartEvent);\n    }));\n  }\n  /**\n   * Registers listeners for the delivery mode clear event.\n   * This is needed for when `CheckoutSupportedDeliveryModesQueryResetEvent` is dispatched\n   * as we need to update the user's cart when the delivery mode is cleared from the backend checkout details.\n   */\n  onDeliveryModeReset() {\n    this.subscriptions.add(this.eventService.get(CheckoutSupportedDeliveryModesQueryResetEvent).subscribe(({\n      userId,\n      cartId\n    }) => this.eventService.dispatch({\n      userId,\n      cartId,\n      /**\n       * As we know the cart is not anonymous (precondition checked),\n       * we can safely use the cartId, which is actually the cart.code.\n       */\n      cartCode: cartId\n    }, LoadCartEvent)));\n  }\n  onGetSupportedDeliveryModesQueryReload() {\n    this.subscriptions.add(merge(this.eventService.get(LanguageSetEvent), this.eventService.get(CurrencySetEvent)).subscribe(() => {\n      this.eventService.dispatch({}, CheckoutSupportedDeliveryModesQueryReloadEvent);\n    }));\n  }\n  onGetSupportedDeliveryModesQueryReset() {\n    this.subscriptions.add(merge(this.eventService.get(LogoutEvent), this.eventService.get(LoginEvent)).subscribe(() => {\n      this.eventService.dispatch({}, CheckoutSupportedDeliveryModesQueryResetEvent);\n    }));\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  static {\n    this.ɵfac = function CheckoutDeliveryModeEventListener_Factory(t) {\n      return new (t || CheckoutDeliveryModeEventListener)(i0.ɵɵinject(i1.EventService));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CheckoutDeliveryModeEventListener,\n      factory: CheckoutDeliveryModeEventListener.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutDeliveryModeEventListener, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.EventService\n  }], null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Checkout payment event listener.\n */\nclass CheckoutPaymentEventListener {\n  constructor(eventService, globalMessageService) {\n    this.eventService = eventService;\n    this.globalMessageService = globalMessageService;\n    this.subscriptions = new Subscription();\n    this.onPaymentCreated();\n    this.onPaymentSet();\n    this.onGetCardTypesQueryReload();\n  }\n  onPaymentCreated() {\n    this.subscriptions.add(this.eventService.get(CheckoutPaymentDetailsCreatedEvent).subscribe(({\n      userId\n    }) => {\n      if (userId !== OCC_USER_ID_ANONYMOUS) {\n        this.eventService.dispatch({\n          userId\n        }, LoadUserPaymentMethodsEvent);\n      }\n      this.globalMessageService.add({\n        key: 'paymentForm.paymentAddedSuccessfully'\n      }, GlobalMessageType.MSG_TYPE_CONFIRMATION);\n      this.eventService.dispatch({}, CheckoutQueryResetEvent);\n    }));\n  }\n  onPaymentSet() {\n    this.subscriptions.add(this.eventService.get(CheckoutPaymentDetailsSetEvent).subscribe(() => {\n      this.eventService.dispatch({}, CheckoutQueryResetEvent);\n    }));\n  }\n  onGetCardTypesQueryReload() {\n    this.subscriptions.add(merge(this.eventService.get(LanguageSetEvent), this.eventService.get(CurrencySetEvent)).subscribe(() => {\n      this.eventService.dispatch({}, CheckoutPaymentCardTypesQueryReloadEvent);\n    }));\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  static {\n    this.ɵfac = function CheckoutPaymentEventListener_Factory(t) {\n      return new (t || CheckoutPaymentEventListener)(i0.ɵɵinject(i1.EventService), i0.ɵɵinject(i1.GlobalMessageService));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CheckoutPaymentEventListener,\n      factory: CheckoutPaymentEventListener.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutPaymentEventListener, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.EventService\n  }, {\n    type: i1.GlobalMessageService\n  }], null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass CheckoutPlaceOrderEventListener {\n  constructor(eventService) {\n    this.eventService = eventService;\n    this.subscriptions = new Subscription();\n    this.onOrderPlaced();\n  }\n  onOrderPlaced() {\n    this.subscriptions.add(this.eventService.get(OrderPlacedEvent).subscribe(({\n      userId,\n      cartId,\n      cartCode\n    }) => {\n      this.eventService.dispatch({\n        userId,\n        cartId,\n        cartCode\n      }, RemoveCartEvent);\n      this.eventService.dispatch({}, CheckoutQueryResetEvent);\n    }));\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  static {\n    this.ɵfac = function CheckoutPlaceOrderEventListener_Factory(t) {\n      return new (t || CheckoutPlaceOrderEventListener)(i0.ɵɵinject(i1.EventService));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CheckoutPlaceOrderEventListener,\n      factory: CheckoutPlaceOrderEventListener.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutPlaceOrderEventListener, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.EventService\n  }], null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * The event listener which dispatches legacy store actions.\n * It will be removed as soon as the legacy store is removed.\n */\n// TODO:#deprecation-checkout remove once all the features using store are switched to c&q\nclass CheckoutLegacyStoreEventListener {\n  constructor(eventService, store) {\n    this.eventService = eventService;\n    this.store = store;\n    this.subscriptions = new Subscription();\n    this.onUserAddressAction();\n    this.onUserPaymentAction();\n  }\n  /**\n   * Registers events for the user address actions.\n   */\n  onUserAddressAction() {\n    this.subscriptions.add(this.eventService.get(LoadUserAddressesEvent).subscribe(({\n      userId\n    }) => {\n      /**\n       * TODO:#deprecation-checkout We have to keep this here, since the user address feature is still ngrx-based.\n       * Remove once it is switched from ngrx to c&q.\n       * We should dispatch an event, which will reload the userAddress$ query.\n       */\n      this.store.dispatch(new UserActions.LoadUserAddresses(userId));\n    }));\n  }\n  /**\n   * Registers events for the user payment actions.\n   */\n  onUserPaymentAction() {\n    this.subscriptions.add(this.eventService.get(LoadUserPaymentMethodsEvent).subscribe(({\n      userId\n    }) => {\n      this.store.dispatch(\n      /**\n       * TODO:#deprecation-checkout We have to keep this here, since the user payment feature is still ngrx-based.\n       * Remove once it is switched from ngrx to c&q.\n       * We should dispatch an event, which will load the userPayment$ query.\n       */\n      new UserActions.LoadUserPaymentMethods(userId));\n    }));\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  static {\n    this.ɵfac = function CheckoutLegacyStoreEventListener_Factory(t) {\n      return new (t || CheckoutLegacyStoreEventListener)(i0.ɵɵinject(i1.EventService), i0.ɵɵinject(i2.Store));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CheckoutLegacyStoreEventListener,\n      factory: CheckoutLegacyStoreEventListener.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutLegacyStoreEventListener, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.EventService\n  }, {\n    type: i2.Store\n  }], null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass CheckoutEventModule {\n  constructor(_checkoutQueryEventListener, _checkoutDeliveryAddressEventListener, _checkoutDeliveryModeEventListener, _checkoutPaymentEventListener, _checkoutPlaceOrderEventListener, _checkoutLegacyStoreEventListener) {\n    // Intentional empty constructor\n  }\n  static {\n    this.ɵfac = function CheckoutEventModule_Factory(t) {\n      return new (t || CheckoutEventModule)(i0.ɵɵinject(CheckoutQueryEventListener), i0.ɵɵinject(CheckoutDeliveryAddressEventListener), i0.ɵɵinject(CheckoutDeliveryModeEventListener), i0.ɵɵinject(CheckoutPaymentEventListener), i0.ɵɵinject(CheckoutPlaceOrderEventListener), i0.ɵɵinject(CheckoutLegacyStoreEventListener));\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: CheckoutEventModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutEventModule, [{\n    type: NgModule,\n    args: [{}]\n  }], () => [{\n    type: CheckoutQueryEventListener\n  }, {\n    type: CheckoutDeliveryAddressEventListener\n  }, {\n    type: CheckoutDeliveryModeEventListener\n  }, {\n    type: CheckoutPaymentEventListener\n  }, {\n    type: CheckoutPlaceOrderEventListener\n  }, {\n    type: CheckoutLegacyStoreEventListener\n  }], null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Interceptor that handles \"Cart not found\" errors while a user is in a checkout step.\n *\n * When a user doing a checkout has a \"Cart not found\" error, he is redirected to checkout and the cart is reloaded.\n * If a \"Cart not found\" error happens and the user is not on checkout, this interceptor does not perform any actions.\n */\nclass CheckoutCartInterceptor {\n  constructor(routingService, multiCartFacade) {\n    this.routingService = routingService;\n    this.multiCartFacade = multiCartFacade;\n  }\n  intercept(request, next) {\n    return this.routingService.getRouterState().pipe(take(1), switchMap(state => {\n      return next.handle(request).pipe(tap({\n        error: response => {\n          if (response instanceof HttpErrorResponse && this.isUserInCheckoutRoute(state.state?.semanticRoute)) {\n            if (this.isCartNotFoundError(response)) {\n              this.routingService.go({\n                cxRoute: 'cart'\n              });\n              const cartCode = this.getCartIdFromError(response);\n              if (cartCode) {\n                this.multiCartFacade.reloadCart(cartCode);\n              }\n            }\n          }\n        }\n      }));\n    }));\n  }\n  /**\n   * Returns true if the parameter semantic route is part of \"checkout\"\n   * Checkout semantic routes:\n   * checkout\n   * checkoutPaymentType\n   * CheckoutDeliveryAddress\n   * checkoutDeliveryMode\n   * checkoutPaymentDetails\n   * checkoutReviewOrder\n   * checkoutLogin\n   * @param semanticRoute\n   */\n  isUserInCheckoutRoute(semanticRoute) {\n    return semanticRoute?.toLowerCase().startsWith('checkout') ?? false;\n  }\n  /**\n   * Checks of the error is for a cart not found, i.e. the cart doesn't exist anymore\n   *\n   * @param response\n   */\n  isCartNotFoundError(response) {\n    return response.status === 400 && response.error?.errors?.[0]?.type === 'CartError' && response.error?.errors?.[0]?.reason === 'notFound';\n  }\n  getCartIdFromError(response) {\n    return response.error?.errors?.[0]?.subject;\n  }\n  static {\n    this.ɵfac = function CheckoutCartInterceptor_Factory(t) {\n      return new (t || CheckoutCartInterceptor)(i0.ɵɵinject(i1.RoutingService), i0.ɵɵinject(i3.MultiCartFacade));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CheckoutCartInterceptor,\n      factory: CheckoutCartInterceptor.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutCartInterceptor, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.RoutingService\n  }, {\n    type: i3.MultiCartFacade\n  }], null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nconst interceptors = [{\n  provide: HTTP_INTERCEPTORS,\n  useExisting: CheckoutCartInterceptor,\n  multi: true\n}];\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nconst CHECKOUT_BASE_CMS_COMPONENTS = ['CheckoutOrchestrator', 'CheckoutOrderSummary', 'CheckoutProgress', 'CheckoutProgressMobileBottom', 'CheckoutProgressMobileTop', 'CheckoutDeliveryMode', 'CheckoutPaymentDetails', 'CheckoutPlaceOrder', 'CheckoutReviewOrder', 'CheckoutReviewPayment', 'CheckoutReviewShipping', 'CheckoutReviewOverview', 'CheckoutDeliveryAddress', 'GuestCheckoutLoginComponent'];\nfunction defaultCheckoutComponentsConfig() {\n  const config = {\n    featureModules: {\n      [CHECKOUT_FEATURE]: {\n        cmsComponents: CHECKOUT_BASE_CMS_COMPONENTS,\n        dependencies: [CART_BASE_FEATURE]\n      },\n      // by default core is bundled together with components\n      [CHECKOUT_CORE_FEATURE]: CHECKOUT_FEATURE\n    }\n  };\n  return config;\n}\nclass CheckoutRootModule {\n  static {\n    this.ɵfac = function CheckoutRootModule_Factory(t) {\n      return new (t || CheckoutRootModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: CheckoutRootModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [...interceptors, provideDefaultConfig(defaultCheckoutRoutingConfig), provideDefaultConfig(defaultCheckoutConfig), provideDefaultConfigFactory(defaultCheckoutComponentsConfig)],\n      imports: [CheckoutEventModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutRootModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CheckoutEventModule],\n      providers: [...interceptors, provideDefaultConfig(defaultCheckoutRoutingConfig), provideDefaultConfig(defaultCheckoutConfig), provideDefaultConfigFactory(defaultCheckoutComponentsConfig)]\n    }]\n  }], null, null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass CheckoutDeliveryModesFacade {\n  static {\n    this.ɵfac = function CheckoutDeliveryModesFacade_Factory(t) {\n      return new (t || CheckoutDeliveryModesFacade)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CheckoutDeliveryModesFacade,\n      factory: () => (() => facadeFactory({\n        facade: CheckoutDeliveryModesFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['getSupportedDeliveryModesState', 'getSupportedDeliveryModes', 'setDeliveryMode', 'getSelectedDeliveryModeState', 'clearCheckoutDeliveryMode'],\n        // TODO:#deprecation-checkout - remove once we remove ngrx\n        async: true\n      }))(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutDeliveryModesFacade, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => facadeFactory({\n        facade: CheckoutDeliveryModesFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['getSupportedDeliveryModesState', 'getSupportedDeliveryModes', 'setDeliveryMode', 'getSelectedDeliveryModeState', 'clearCheckoutDeliveryMode'],\n        // TODO:#deprecation-checkout - remove once we remove ngrx\n        async: true\n      })\n    }]\n  }], null, null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass CheckoutPaymentFacade {\n  static {\n    this.ɵfac = function CheckoutPaymentFacade_Factory(t) {\n      return new (t || CheckoutPaymentFacade)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CheckoutPaymentFacade,\n      factory: () => (() => facadeFactory({\n        facade: CheckoutPaymentFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['getPaymentCardTypesState', 'getPaymentCardTypes', 'getPaymentDetailsState', 'createPaymentDetails', 'setPaymentDetails'],\n        // TODO:#deprecation-checkout - remove once we remove ngrx\n        async: true\n      }))(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutPaymentFacade, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => facadeFactory({\n        facade: CheckoutPaymentFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['getPaymentCardTypesState', 'getPaymentCardTypes', 'getPaymentDetailsState', 'createPaymentDetails', 'setPaymentDetails'],\n        // TODO:#deprecation-checkout - remove once we remove ngrx\n        async: true\n      })\n    }]\n  }], null, null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass CheckoutQueryFacade {\n  static {\n    this.ɵfac = function CheckoutQueryFacade_Factory(t) {\n      return new (t || CheckoutQueryFacade)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CheckoutQueryFacade,\n      factory: () => (() => facadeFactory({\n        facade: CheckoutQueryFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['getCheckoutDetailsState']\n      }))(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckoutQueryFacade, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => facadeFactory({\n        facade: CheckoutQueryFacade,\n        feature: CHECKOUT_CORE_FEATURE,\n        methods: ['getCheckoutDetailsState']\n      })\n    }]\n  }], null, null);\n})();\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n/** AUGMENTABLE_TYPES_END */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CHECKOUT_BASE_CMS_COMPONENTS, CHECKOUT_CORE_FEATURE, CHECKOUT_FEATURE, CheckoutConfig, CheckoutDeliveryAddressClearedEvent, CheckoutDeliveryAddressCreatedEvent, CheckoutDeliveryAddressEvent, CheckoutDeliveryAddressEventListener, CheckoutDeliveryAddressFacade, CheckoutDeliveryAddressSetEvent, CheckoutDeliveryModeClearedErrorEvent, CheckoutDeliveryModeClearedEvent, CheckoutDeliveryModeEvent, CheckoutDeliveryModeEventListener, CheckoutDeliveryModeSetEvent, CheckoutDeliveryModesFacade, CheckoutEvent, CheckoutEventModule, CheckoutPaymentCardTypesQueryReloadEvent, CheckoutPaymentCardTypesQueryResetEvent, CheckoutPaymentDetailsCreatedEvent, CheckoutPaymentDetailsEvent, CheckoutPaymentDetailsSetEvent, CheckoutPaymentEventListener, CheckoutPaymentFacade, CheckoutQueryFacade, CheckoutQueryReloadEvent, CheckoutQueryResetEvent, CheckoutRootModule, CheckoutSupportedDeliveryModesQueryReloadEvent, CheckoutSupportedDeliveryModesQueryResetEvent, DeliveryModePreferences, defaultCheckoutComponentsConfig };\n"],"mappings":"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","names":["DeliveryModePreferences"],"x_google_ignoreList":[0]}